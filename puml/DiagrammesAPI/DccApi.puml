@startuml
'https://plantuml.com/sequence-diagram

skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml

package model{
    interface AnnotatedConstruct <<interface>>{
        'A - the annotation interface
        + {abstract}getAnnotation(annotationType : Class<A>) : <A extends Annotation> A
        + {abstract}getAnnotationMirrors() : List<? extends AnnotationMirror>
        + {abstract}getAnnotationByType(annotationType : Class<A>) : <A extends Annotation> A[]
        }


    interface Element <<interface>> extends AnnotatedConstruct{
        + {abstract}equals(obj : Object) : Boolean
        + {abstract}hashCode() : Integer
    }

    interface Annotation <<interface>>{
        +{abstract}annotationType() : Class<? extends Annotation>
        + {abstract}equals(obj : Object) : Boolean
        + {abstract}hashCode() : Integer
        + {abstract}toString() : String
    }

    interface Name <<interface>> extends CharSequence{
        +{abstract}contentEquals(cs : CharSequence) : Boolean
        +{abstract}equals(obj : Object) : Boolean
        +{abstract}hashCode() : Integer
    }

    enum Modifier <<enum>>{
        +toString() : String

    }

    enum ElementKind <<enum>>{
        +isClass() : Boolean
        +isDeclaredType() : Boolean
        +isExecutable() : Boolean
        +isField() : Boolean
        +isInitializer() : Boolean
        +isInterface() : Boolean
        +isVariable() : Boolean

    }

    interface TypeMirror <<interface>> extends AnnotatedConstruct{
         + {abstract}equals(obj : Object) : Boolean
         + {abstract}hashCode() : Integer
         + {abstract}toString() : String
    }

    enum TypeKind <<enum>>{
        + isPrimitive() : Boolean
    }

Element --> Element : getEnclosingElement()\ngetEnclosedElements()
Element --> TypeMirror : asType()
Element "1" o--> "*" Modifier : getModifiers()
Element --> ElementKind : getKind()
Element --> Name : getSimpleName()
ElementKind --> ElementKind : valueOf(name : String)
ElementKind "1" --> "*" ElementKind : values()
TypeMirror --> TypeKind : getKind()
TypeKind --> TypeKind : valueOf(name : String)
TypeKind "1" --> "*" TypeKind : values()
Modifier --> Modifier: valueOf(name : String)
Modifier "1" --> "*" Modifier : values()



}
@enduml